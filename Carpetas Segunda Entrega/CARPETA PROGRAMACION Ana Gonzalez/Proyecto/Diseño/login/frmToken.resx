<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bfbtnVerificar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKkAAAA6CAYAAADLJ3nCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAL5SURBVHhe7d2vb9tAGMbxwrFWip2VbbBwcHBwzOdKlcpW
        ODg42P+gsDDSkixwsDBwsHBwMLAwQ9vutd/4Vxw3aRz7lfJ9pY9StWe74NH5znbOJxR1NDUeRB/ENIxu
        cdy+hfFHycLoNDrTeHRfcvBJGN1MQjebBm45Dd0/oMF8HERfZq+jtxqhw5UcZBK4H+v/RJz9/L3wM47b
        hizMpZfVSLVXo/DqfBrE9zUHBLZUDmzS2Q0uLzRi+5U/rb/zp/RF8QDAfjSwMlQcRk6j9rLyvee1T/yf
        9YMAL+fnMv6z2LNGtxq53UoCmu+EcSbal4Y1c6fR267Gw/g9PSg65ztGjWBzpZOk1RiUHhQd8mNU6SA1
        ipvLNxylGxFQdCmbTD1qFOsrmcnrRpXxAnBw2XXVphl//YV6oFs+h79Hbz690ljmJXeT6jYA+iD3/zWa
        eU2G7nPagLEoDAjie41mXn7A+lDbGOhD4BYazby4LgprZCKv8WQ8CmvSIWdpXJo+rFzXGOiPPLOsEU2u
        j97UNQL6kF+jLzx4kj72zwPLsKExpIAthBTmEVKYR0hhHiGFeYQU5hFSmEdIYR4hhXmEFOYRUphHSGEe
        IYV5hBTmEVKYR0hhHiGFeYWQ5t+5BywphFS+lSe/5OsjsGCVQ3kZhEbUn+4HlxfVhkDviuuVyitvahsB
        vdCetPqWkknofq03BrqVfVM0cMu1lfWY4cOUwD1oNPOSZaDlj0ye0KdV/kqrlxSLUz5MkFN9eHWusSyX
        LAMtjehN0bPm1+X4FD9KQ4KKXgRuUbsUebFYYQ89+SufcvdTo9hccqW/sgPgYLKzdt0S5E0lG1R3BrQt
        D6j7+expvlqygZ/tz6o7BVqUnOKTgJ5GZxq93Wscuq+VHQPtCdxo5x60ruQpKXkBVPUA+WKnwM6eSk85
        tVGSdp1QPVUOBmwvcEv/ebfX6f25kp3LLatkvJoesP6fAcrm0sltvJN0yEquqwbxdfqACpCTa56Sj4P2
        mhTVf52c/Afzng/dmvIa1AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="bftxtCodigo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPQAAAAzCAYAAACgwiXyAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADXSURBVHhe7dOxDQIxAARBVwEB/bfwkQP3QRkUALL0CSV4
        NSdNcvkOM4vtuq73WusLnGk3fOc8xj4ezxdwqN3wnbOg4XSChhBBQ4igIUTQECJoCBE0hAgaQgQNIYKG
        EEFDiKAhRNAQImgIETSECBpCBA0hgoYQQUOIoCFE0BAiaAgRNIQIGkIEDSGChhBBQ4igIUTQECJoCBE0
        hAgaQgQNIYKGEEFDiKAhRNAQImgIETSECBpCBA0hgoYQQUOIoCFE0BAiaAj5C3rO+dkHcKbd8J2zmTU2
        xg8JIZ+sGXxvKQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="bunifuLabel2.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 0px; font-family: 'Segoe UI Light'; font-size: 11,25pt; width: 100%; height: 100%; font-style: normal; font-weight: normal; text-decoration: none; color: rgb(255, 255, 255); text-align: left; }</value>
  </data>
</root>