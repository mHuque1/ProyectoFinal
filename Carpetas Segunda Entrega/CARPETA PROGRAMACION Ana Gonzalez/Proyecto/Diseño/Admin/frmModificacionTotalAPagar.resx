<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtCosto.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARUAAABOCAYAAAAO0IJiAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAE2SURBVHhe7dSxEcIwAARBVQEB/VdFFyJTYkaME1L7wv2Z
        Tb6AG2Zm+eac78PM7MZ2R86kjLGPx/MFcNnemRRRAe4TFSAlKkBKVICUqAApUQFSogKkRAVIiQqQEhUg
        JSpASlSAlKgAKVEBUqICpEQFSIkKkBIVICUqQEpUgJSoAClRAVKiAqREBUiJCpASFSAlKkBKVICUqAAp
        UQFSogKkRAVIiQqQEhUgJSpASlSAlKgAKVEBUqICpEQFSIkKkBIVICUqQEpUgJSoAClRAVKiAqREBUiJ
        CpASFSAlKkBKVICUqAApUQFSogKkRAVIiQqQEhUgJSpASlSAlKgAKVEBUqICpEQFSIkKkBIVICUqQEpU
        gJSoAClRAVKiAqREBUiJCpD6i8pa6/N7zMwubnfkTIqZWbUxvg1rr7QrFMjuAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnModificarPrecio.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAS0AAABACAYAAABP/iHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANfSURBVHhe7d0tb9xIAAbgwLJEir1X1oOFBwsLj3m2UqWw
        BhYWHuw/CAxcqbt7gYWFgQcLDxYGFubQ3XnWs1+Ok+ZrY4/6vNKjXSVjO+jVeHbW2RMR+SkzPaxeR/Oy
        +giw9Kkc/x67YbJfHaS6ePrEi8/K6nhWhrN5ES7nZfgP4JbOp0X14eyX6tdUKbtLvMisCJ+v/hHj1fs/
        N94DLF3TDedxFpYq5vEyKd8+nxfj044LAtzDdoEtJkOHb16mynlY6tvA3+pbwIvNCwA8nlRgcalpVIVU
        PfdLPbs6qhvwn6sXAXgcs8Xr5syr+pgq6G6JhbU+iXUqYLea8lo5SVV0u0xH41dmWECv6olTqqSb0yy6
        L9ewzLCAnhThMk6gUjVdn3rgpDlIYQF9WS3Of03V1J3FJ4XpoNb9JcCTWu3ruukTxe6NowD9qXvp2+TF
        u2epptaJu927DgDoW/z+YqqqdWaj8L4ZYC0LGJhifJqqap15Eb50DgboWxEuUlWtY18WMGTxg8JUV9az
        gCFrlqy21rWah/d1DQYYhvgMv1RZi/1Zx12DAPq23jO68UXq5rGoHuAHDM+NpQUwXEoLyIrSArKitICs
        KC0gK0oLyIrSArKitICsKC0gK0oLyIrSArKitICsKC0gK0oLyIrSArKitICsKC0gK0oLyIrSArKitICs
        KC0gK0oLyIrSArKyUVqzUXjfPQhgKDZKK/6P/PhD/6wVGJplL02L6kOqrPr28PDNy/ZAgEEpxkepsvb2
        JvvVQecggN6lmdZh9TpVVpNZGf6+OhigP3UvNe+LcDl58e5ZqqsmPkEEBqsIX1JVrTMdjV/FX1qMB4Zi
        2UezsjpOVbUdt4jA4MRbw/Lt81RT25mPqhAHmW0BA3KSKqo7dat9jQMVF9C7IlxcWYBvJ36s2HkwwNP5
        N77Gb+ukaro5cedp6wQAT2J1l1eMT1Ml3S7xgPbJAHZpXVjhrx/eFrYTD5iV4ax9UoAdWdwSLgprvzpI
        VXT3TMvwR+vEALtRhMmdZ1hdiU+BmBXhW/sCqy32AA/zfespDo+R2H5pgf5762IA91OEy/r15EG3gz9K
        PHncUr9Y72ou2P3HAFzvPE6Crt3pvsss9nUV46PmC9cA3eKeq9gXO51ViYgMK3t7/wPcBJEH+SFV5wAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>